{"componentChunkName":"component---src-templates-blog-post-js","path":"/2016/11/28/adventures-in-elm/","result":{"data":{"site":{"siteMetadata":{"title":"blog.nojaf.com","author":"Florian Verdonck"}},"markdownRemark":{"id":"c16d83d1-e211-5e24-9d80-61df0033a4df","excerpt":"Introduction 2016 for me personal was the year the I came in serious contact with functional languages. I started looking at F#, applied functional concepts…","html":"<h2>Introduction</h2>\n<p>2016 for me personal was the year the I came in serious contact with <strong>functional languages</strong>. I started looking at F#, applied functional concepts (partial application, immutability, pure functions and so on) in JavaScript, gave RxJS a shot and fell in love with React.</p>\n<p>A logical next step was looking at <strong>Elm</strong>. I was first introduced to Elm at a <a href=\"https://www.meetup.com/socratesbe/events/228173829/\">Socrates Meetup</a> a while ago by <a href=\"https://thomascoopman.eu/\">Thomas Coopman</a>. To be honest I was a bit overwhelmed at the time and a bit skeptical afterwards.</p>\n<p>I decided to give Elm another shot and learned a lot by following <a href=\"http://courses.knowthen.com/p/elm-for-beginners\">Elm for beginners</a>. Now I feel ready to create small Elm applications.</p>\n<h2>The Christmas presents application</h2>\n<p>We have this family tradition that on Christmas Eve we give presents to each other among cousins. Each cousin or niece draws a name and gives a present to that person.<br>\nFor a very long time the name drawing was done in a low tech fashion. But in more recent years I create a little application to automate the process.</p>\n<p>The first iteration was me playing around with <a href=\"https://github.com/nojaf/OwinChristmasPresents\">Owin/Katana</a> and the second with <a href=\"https://github.com/nojaf/christmas-redux\">React/Redux</a>.<br>\nThis year I decide to go with Elm.</p>\n<p>I assume you know a thing or two about Elm as I’m not really explaining every single detail.<br>\nThis blogpost is merely a walkthrough of a little Elm application I wrote.</p>\n<h3>Getting started</h3>\n<p>I used <a href=\"https://github.com/moarwick/elm-webpack-starter\">elm-webpack-starter</a> to get started because I would also play around with <a href=\"http://bulma.io/\">Bulma</a>.</p>\n<p>I populated the Main.elm file with</p>\n<p>And filled in all the pieces.</p>\n<h3>The model</h3>\n<p>The model part is very easy. There is a list of Person, a result dictionary and String property to contain the name of a new Person.</p>\n<div class=\"gatsby-highlight\" data-language=\"elm\"><pre class=\"language-elm\"><code class=\"language-elm\"><span class=\"token keyword\">type</span> <span class=\"token keyword\">alias</span> <span class=\"token constant\">Person</span> <span class=\"token operator\">=</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token hvariable\">name</span> <span class=\"token operator\">:</span> <span class=\"token constant\">String</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">id</span> <span class=\"token operator\">:</span> <span class=\"token constant\">Int</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token keyword\">alias</span> <span class=\"token constant\">Model</span> <span class=\"token operator\">=</span>  \n    <span class=\"token punctuation\">{</span> <span class=\"token hvariable\">people</span> <span class=\"token operator\">:</span> <span class=\"token constant\">List</span> <span class=\"token constant\">Person</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">result</span> <span class=\"token operator\">:</span> <span class=\"token constant\">Dict</span> <span class=\"token constant\">Int</span> <span class=\"token constant\">Int</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">newPerson</span> <span class=\"token operator\">:</span> <span class=\"token constant\">String</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token hvariable\">init</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span> <span class=\"token constant\">Model</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">Cmd</span> <span class=\"token constant\">Msg</span> <span class=\"token punctuation\">)</span>  \n<span class=\"token hvariable\">init</span> <span class=\"token operator\">=</span>  \n    <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">Model</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token hvariable\">Dict.empty</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">Cmd.none</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Actions</h3>\n<p>Very few messages but there is a bit of a twist in determining the result dictionary.</p>\n<div class=\"gatsby-highlight\" data-language=\"elm\"><pre class=\"language-elm\"><code class=\"language-elm\"><span class=\"token keyword\">type</span> <span class=\"token constant\">Msg</span>\n    <span class=\"token operator\">=</span> <span class=\"token constant\">UpdateNewPerson</span> <span class=\"token constant\">String</span>\n    <span class=\"token operator\">|</span> <span class=\"token constant\">AddPerson</span>\n    <span class=\"token operator\">|</span> <span class=\"token constant\">RemovePerson</span> <span class=\"token constant\">Int</span>\n    <span class=\"token operator\">|</span> <span class=\"token constant\">Generate</span>\n    <span class=\"token operator\">|</span> <span class=\"token constant\">Result</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">List</span> <span class=\"token constant\">Int</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>View</h3>\n<p>Very standard Elm stuff here as well.<br>\nI’m listing the code below to get the complete picture but notice that not much in going on.</p>\n<div class=\"gatsby-highlight\" data-language=\"elm\"><pre class=\"language-elm\"><code class=\"language-elm\"><span class=\"token hvariable\">view</span> <span class=\"token operator\">:</span> <span class=\"token constant\">Model</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Html</span> <span class=\"token constant\">Msg</span>\n<span class=\"token hvariable\">view</span> <span class=\"token hvariable\">model</span> <span class=\"token operator\">=</span>  \n    <span class=\"token hvariable\">div</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">createForm</span> <span class=\"token hvariable\">model</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">newPerson</span>\n        <span class=\"token punctuation\">,</span> <span class=\"token hvariable\">createPeopleTable</span> <span class=\"token hvariable\">model</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">people</span>\n        <span class=\"token punctuation\">,</span> <span class=\"token hvariable\">createGenerateButton</span> <span class=\"token hvariable\">model</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">people</span>\n        <span class=\"token punctuation\">,</span> <span class=\"token hvariable\">createResultTable</span> <span class=\"token hvariable\">model</span>\n        <span class=\"token punctuation\">]</span>\n\n<span class=\"token hvariable\">createForm</span> <span class=\"token operator\">:</span> <span class=\"token constant\">String</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Html</span> <span class=\"token constant\">Msg</span>  \n<span class=\"token hvariable\">createForm</span> <span class=\"token hvariable\">currentName</span> <span class=\"token operator\">=</span>  \n    <span class=\"token hvariable\">Html.form</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">class</span> <span class=\"token string\">\"entry box\"</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">onSubmit</span> <span class=\"token constant\">AddPerson</span> <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">h4</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">class</span> <span class=\"token string\">\"subtitle\"</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">text</span> <span class=\"token string\">\"Personen toevoegen\"</span> <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">,</span> <span class=\"token hvariable\">p</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">class</span> <span class=\"token string\">\"control has-addons\"</span> <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">input</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">class</span> <span class=\"token string\">\"input\"</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">type_</span> <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">placeholder</span> <span class=\"token string\">\"Vul een nieuwe naam in\"</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">onInput</span> <span class=\"token constant\">UpdateNewPerson</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">value</span> <span class=\"token hvariable\">currentName</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">,</span> <span class=\"token hvariable\">a</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">class</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">formButtonClass</span> <span class=\"token hvariable\">currentName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">onClick</span> <span class=\"token constant\">AddPerson</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">text</span> <span class=\"token string\">\"Toevoegen\"</span> <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">]</span>\n\n<span class=\"token hvariable\">formButtonClass</span> <span class=\"token operator\">:</span> <span class=\"token constant\">String</span> <span class=\"token operator\">-></span> <span class=\"token constant\">String</span>  \n<span class=\"token hvariable\">formButtonClass</span> <span class=\"token hvariable\">currentName</span> <span class=\"token operator\">=</span>  \n    <span class=\"token keyword\">if</span> <span class=\"token hvariable\">String.isEmpty</span> <span class=\"token hvariable\">currentName</span> <span class=\"token keyword\">then</span>\n        <span class=\"token string\">\"button is-info is-disabled\"</span>\n    <span class=\"token keyword\">else</span>\n        <span class=\"token string\">\"button is-info\"</span>\n\n<span class=\"token hvariable\">createPeopleTable</span> <span class=\"token operator\">:</span> <span class=\"token constant\">List</span> <span class=\"token constant\">Person</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Html</span> <span class=\"token constant\">Msg</span>  \n<span class=\"token hvariable\">createPeopleTable</span> <span class=\"token hvariable\">people</span> <span class=\"token operator\">=</span>  \n    <span class=\"token hvariable\">table</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">class</span> <span class=\"token string\">\"table is-striped\"</span> <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">thead</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">tr</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">th</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">text</span> <span class=\"token string\">\"Naam\"</span> <span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">,</span> <span class=\"token hvariable\">th</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">colspan</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">text</span> <span class=\"token string\">\"Verwijderen\"</span> <span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">,</span> <span class=\"token hvariable\">tbody</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">List.map</span> <span class=\"token hvariable\">createPeopleTableRow</span> <span class=\"token hvariable\">people</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">]</span>\n\n<span class=\"token hvariable\">createPeopleTableRow</span> <span class=\"token operator\">:</span> <span class=\"token constant\">Person</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Html</span> <span class=\"token constant\">Msg</span>  \n<span class=\"token hvariable\">createPeopleTableRow</span> <span class=\"token hvariable\">person</span> <span class=\"token operator\">=</span>  \n    <span class=\"token hvariable\">tr</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">td</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">text</span> <span class=\"token hvariable\">person</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">name</span> <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">,</span> <span class=\"token hvariable\">td</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">class</span> <span class=\"token string\">\"is-icon\"</span> <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">div</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">class</span> <span class=\"token string\">\"button is-danger is-small\"</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">onClick</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">RemovePerson</span> <span class=\"token hvariable\">person</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">i</span>\n                    <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">class</span> <span class=\"token string\">\"fa fa-times\"</span> <span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">]</span>\n\n<span class=\"token hvariable\">createGenerateButton</span> <span class=\"token operator\">:</span> <span class=\"token constant\">List</span> <span class=\"token constant\">Person</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Html</span> <span class=\"token constant\">Msg</span>  \n<span class=\"token hvariable\">createGenerateButton</span> <span class=\"token hvariable\">people</span> <span class=\"token operator\">=</span>  \n    <span class=\"token keyword\">let</span>\n        <span class=\"token hvariable\">disabledClass</span> <span class=\"token operator\">=</span>\n            <span class=\"token keyword\">if</span> <span class=\"token hvariable\">List.length</span> <span class=\"token hvariable\">people</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span> <span class=\"token keyword\">then</span>\n                <span class=\"token string\">\"is-disabled\"</span>\n            <span class=\"token keyword\">else</span>\n                <span class=\"token string\">\"\"</span>\n    <span class=\"token keyword\">in</span>\n        <span class=\"token hvariable\">button</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">class</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"button is-primary is-large \"</span> <span class=\"token operator\">++</span> <span class=\"token hvariable\">disabledClass</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">onClick</span> <span class=\"token constant\">Generate</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">id</span> <span class=\"token string\">\"generate\"</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">text</span> <span class=\"token string\">\"Genereer\"</span> <span class=\"token punctuation\">]</span>\n\n<span class=\"token hvariable\">createResultTable</span> <span class=\"token operator\">:</span> <span class=\"token constant\">Model</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Html</span> <span class=\"token constant\">Msg</span>  \n<span class=\"token hvariable\">createResultTable</span> <span class=\"token hvariable\">model</span> <span class=\"token operator\">=</span>  \n    <span class=\"token keyword\">let</span>\n        <span class=\"token hvariable\">resultList</span> <span class=\"token operator\">=</span>\n            <span class=\"token hvariable\">Dict.toList</span> <span class=\"token hvariable\">model</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">result</span>\n\n        <span class=\"token hvariable\">createRow</span> <span class=\"token operator\">=</span>\n            <span class=\"token hvariable\">createResultRow</span> <span class=\"token hvariable\">model</span>\n    <span class=\"token keyword\">in</span>\n        <span class=\"token hvariable\">table</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">class</span> <span class=\"token string\">\"table is-striped\"</span> <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">thead</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">tr</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">th</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">text</span> <span class=\"token string\">\"Resultaat\"</span> <span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">,</span> <span class=\"token hvariable\">th</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">,</span> <span class=\"token hvariable\">th</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">,</span> <span class=\"token hvariable\">tbody</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">resultList</span> <span class=\"token operator\">|></span> <span class=\"token hvariable\">List.map</span> <span class=\"token hvariable\">createRow</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">]</span>\n\n<span class=\"token hvariable\">createResultRow</span> <span class=\"token operator\">:</span> <span class=\"token constant\">Model</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span> <span class=\"token constant\">Int</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">Int</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Html</span> <span class=\"token constant\">Msg</span>  \n<span class=\"token hvariable\">createResultRow</span> <span class=\"token hvariable\">model</span> <span class=\"token punctuation\">(</span> <span class=\"token hvariable\">id</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">for</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span>  \n    <span class=\"token keyword\">let</span>\n        <span class=\"token hvariable\">subject</span> <span class=\"token operator\">=</span>\n            <span class=\"token hvariable\">getNameById</span> <span class=\"token hvariable\">model</span> <span class=\"token hvariable\">id</span>\n\n        <span class=\"token hvariable\">target</span> <span class=\"token operator\">=</span>\n            <span class=\"token hvariable\">getNameById</span> <span class=\"token hvariable\">model</span> <span class=\"token hvariable\">for</span>\n    <span class=\"token keyword\">in</span>\n        <span class=\"token hvariable\">tr</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">td</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">text</span> <span class=\"token hvariable\">subject</span> <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">,</span> <span class=\"token hvariable\">td</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">text</span> <span class=\"token string\">\"koopt voor\"</span> <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">,</span> <span class=\"token hvariable\">td</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span> <span class=\"token hvariable\">text</span> <span class=\"token hvariable\">target</span> <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">]</span>\n\n<span class=\"token hvariable\">getNameById</span> <span class=\"token operator\">:</span> <span class=\"token constant\">Model</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Int</span> <span class=\"token operator\">-></span> <span class=\"token constant\">String</span>  \n<span class=\"token hvariable\">getNameById</span> <span class=\"token hvariable\">model</span> <span class=\"token hvariable\">id</span> <span class=\"token operator\">=</span>  \n    <span class=\"token hvariable\">List.filter</span> <span class=\"token punctuation\">(</span>\\<span class=\"token hvariable\">p</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">p</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">id</span> <span class=\"token operator\">==</span> <span class=\"token hvariable\">id</span><span class=\"token punctuation\">)</span> <span class=\"token hvariable\">model</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">people</span>\n        <span class=\"token operator\">|></span> <span class=\"token hvariable\">List.head</span>\n        <span class=\"token operator\">|></span> <span class=\"token hvariable\">Maybe.map</span> <span class=\"token punctuation\">(</span>\\<span class=\"token hvariable\">p</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">p</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">name</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">|></span> <span class=\"token hvariable\">Maybe.withDefault</span> <span class=\"token string\">\"???\"</span></code></pre></div>\n<p>I created some functions to split everything up, used some Bulma classes and Bob’s your uncle</p>\n<h2>Update</h2>\n<p>This is the part where it got a bit tricky.</p>\n<div class=\"gatsby-highlight\" data-language=\"elm\"><pre class=\"language-elm\"><code class=\"language-elm\"><span class=\"token hvariable\">update</span> <span class=\"token operator\">:</span> <span class=\"token constant\">Msg</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Model</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span> <span class=\"token constant\">Model</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">Cmd</span> <span class=\"token constant\">Msg</span> <span class=\"token punctuation\">)</span>\n<span class=\"token hvariable\">update</span> <span class=\"token hvariable\">msg</span> <span class=\"token hvariable\">model</span> <span class=\"token operator\">=</span>  \n    <span class=\"token keyword\">case</span> <span class=\"token hvariable\">msg</span> <span class=\"token keyword\">of</span>\n        <span class=\"token constant\">UpdateNewPerson</span> <span class=\"token hvariable\">newValue</span> <span class=\"token operator\">-></span>\n            <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> <span class=\"token hvariable\">model</span> <span class=\"token operator\">|</span> <span class=\"token hvariable\">newPerson</span> <span class=\"token operator\">=</span> <span class=\"token hvariable\">newValue</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">Cmd.none</span> <span class=\"token punctuation\">)</span>\n\n        <span class=\"token constant\">AddPerson</span> <span class=\"token operator\">-></span>\n            <span class=\"token hvariable\">addPerson</span> <span class=\"token hvariable\">model</span>\n\n        <span class=\"token constant\">RemovePerson</span> <span class=\"token hvariable\">id</span> <span class=\"token operator\">-></span>\n            <span class=\"token hvariable\">removePerson</span> <span class=\"token hvariable\">model</span> <span class=\"token hvariable\">id</span>\n\n        <span class=\"token constant\">Generate</span> <span class=\"token operator\">-></span>\n            <span class=\"token punctuation\">(</span> <span class=\"token hvariable\">model</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">generate</span> <span class=\"token hvariable\">model</span> <span class=\"token punctuation\">)</span>\n\n        <span class=\"token constant\">Result</span> <span class=\"token hvariable\">ids</span> <span class=\"token operator\">-></span>\n            <span class=\"token hvariable\">processResult</span> <span class=\"token hvariable\">model</span> <span class=\"token hvariable\">ids</span>\n\n<span class=\"token hvariable\">removePerson</span> <span class=\"token operator\">:</span> <span class=\"token constant\">Model</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Int</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span> <span class=\"token constant\">Model</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">Cmd</span> <span class=\"token constant\">Msg</span> <span class=\"token punctuation\">)</span>  \n<span class=\"token hvariable\">removePerson</span> <span class=\"token hvariable\">model</span> <span class=\"token hvariable\">id</span> <span class=\"token operator\">=</span>  \n    <span class=\"token keyword\">let</span>\n        <span class=\"token hvariable\">nextModel</span> <span class=\"token operator\">=</span>\n            <span class=\"token punctuation\">{</span> <span class=\"token hvariable\">model</span> <span class=\"token operator\">|</span> <span class=\"token hvariable\">people</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">List.filter</span> <span class=\"token punctuation\">(</span>\\<span class=\"token hvariable\">p</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">p</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">id</span> <span class=\"token operator\">/=</span> <span class=\"token hvariable\">id</span><span class=\"token punctuation\">)</span> <span class=\"token hvariable\">model</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">people</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">in</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">List.length</span> <span class=\"token hvariable\">nextModel</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">people</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token keyword\">then</span>\n            <span class=\"token punctuation\">(</span> <span class=\"token hvariable\">nextModel</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">generate</span> <span class=\"token hvariable\">nextModel</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> <span class=\"token hvariable\">nextModel</span> <span class=\"token operator\">|</span> <span class=\"token hvariable\">result</span> <span class=\"token operator\">=</span> <span class=\"token hvariable\">Dict.empty</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">Cmd.none</span> <span class=\"token punctuation\">)</span>\n\n<span class=\"token hvariable\">addPerson</span> <span class=\"token operator\">:</span> <span class=\"token constant\">Model</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span> <span class=\"token constant\">Model</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">Cmd</span> <span class=\"token constant\">Msg</span> <span class=\"token punctuation\">)</span>  \n<span class=\"token hvariable\">addPerson</span> <span class=\"token hvariable\">model</span> <span class=\"token operator\">=</span>  \n    <span class=\"token keyword\">let</span>\n        <span class=\"token hvariable\">nextId</span> <span class=\"token operator\">=</span>\n            <span class=\"token hvariable\">List.map</span> <span class=\"token punctuation\">(</span>\\<span class=\"token hvariable\">p</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">p</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">id</span><span class=\"token punctuation\">)</span> <span class=\"token hvariable\">model</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">people</span>\n                <span class=\"token operator\">|></span> <span class=\"token hvariable\">List.maximum</span>\n                <span class=\"token operator\">|></span> <span class=\"token hvariable\">Maybe.withDefault</span> <span class=\"token number\">0</span>\n                <span class=\"token operator\">|></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n\n        <span class=\"token hvariable\">nextPerson</span> <span class=\"token operator\">=</span>\n            <span class=\"token constant\">Person</span> <span class=\"token hvariable\">model</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">newPerson</span> <span class=\"token hvariable\">nextId</span>\n    <span class=\"token keyword\">in</span>\n        <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> <span class=\"token hvariable\">model</span> <span class=\"token operator\">|</span> <span class=\"token hvariable\">people</span> <span class=\"token operator\">=</span> <span class=\"token hvariable\">nextPerson</span> <span class=\"token operator\">::</span> <span class=\"token hvariable\">model</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">people</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">newPerson</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">Cmd.none</span> <span class=\"token punctuation\">)</span>\n\n<span class=\"token hvariable\">processResult</span> <span class=\"token operator\">:</span> <span class=\"token constant\">Model</span> <span class=\"token operator\">-></span> <span class=\"token constant\">List</span> <span class=\"token constant\">Int</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span> <span class=\"token constant\">Model</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">Cmd</span> <span class=\"token constant\">Msg</span> <span class=\"token punctuation\">)</span>  \n<span class=\"token hvariable\">processResult</span> <span class=\"token hvariable\">model</span> <span class=\"token hvariable\">ids</span> <span class=\"token operator\">=</span>  \n    <span class=\"token keyword\">let</span>\n        <span class=\"token hvariable\">personIds</span> <span class=\"token operator\">=</span>\n            <span class=\"token hvariable\">List.map</span> <span class=\"token punctuation\">(</span>\\<span class=\"token hvariable\">p</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">p</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">id</span><span class=\"token punctuation\">)</span> <span class=\"token hvariable\">model</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">people</span>\n\n        <span class=\"token hvariable\">merged</span> <span class=\"token operator\">=</span>\n            <span class=\"token hvariable\">List.map2</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token hvariable\">personIds</span> <span class=\"token hvariable\">ids</span>\n    <span class=\"token keyword\">in</span>\n        <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> <span class=\"token hvariable\">model</span> <span class=\"token operator\">|</span> <span class=\"token hvariable\">result</span> <span class=\"token operator\">=</span> <span class=\"token hvariable\">Dict.fromList</span> <span class=\"token hvariable\">merged</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">Cmd.none</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">UpdateNewPerson</code>, <code class=\"language-text\">AddPerson</code> and <code class=\"language-text\">RemovePerson</code> are straightforward but I scratched my head to generate the actual result. I couldn’t figure out how to get a randomized list of the person ids to populate the result dictionary.</p>\n<h2>Generating the result</h2>\n<h3>Problem</h3>\n<p>To determine the result of who buys for who I would basically take the list of ids and shuffle it until no indexes are the same. But such a function would not be a pure one as the outcome could be different each time you call it.</p>\n<h3>Solution</h3>\n<p>When I doubt stick to what you know! So I decide to tackle the problem in JavaScript using Elm’s port system.</p>\n<div class=\"gatsby-highlight\" data-language=\"elm\"><pre class=\"language-elm\"><code class=\"language-elm\"><span class=\"token hvariable\">port</span> <span class=\"token hvariable\">generationRequest</span> <span class=\"token operator\">:</span> <span class=\"token constant\">List</span> <span class=\"token constant\">Int</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Cmd</span> <span class=\"token hvariable\">msg</span>\n\n<span class=\"token hvariable\">generate</span> <span class=\"token operator\">:</span> <span class=\"token constant\">Model</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Cmd</span> <span class=\"token constant\">Msg</span>  \n<span class=\"token hvariable\">generate</span> <span class=\"token hvariable\">model</span> <span class=\"token operator\">=</span>  \n    <span class=\"token hvariable\">generationRequest</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">List.map</span> <span class=\"token punctuation\">(</span>\\<span class=\"token hvariable\">p</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">p</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">id</span><span class=\"token punctuation\">)</span> <span class=\"token hvariable\">model</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">people</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Note that <code class=\"language-text\">generate</code> is being called when a <code class=\"language-text\">Generate</code> message enters the update function by the onClick event. The <code class=\"language-text\">generationRequest</code> command return from the update function can be captured in the JavaScript world and will contain an array of ids when called.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// pull in desired CSS/SASS files</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'./styles/main.scss'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// inject bundled Elm app into div#main</span>\n<span class=\"token keyword\">var</span> Elm <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'../elm/Main'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> Elm<span class=\"token punctuation\">.</span>Main<span class=\"token punctuation\">.</span><span class=\"token function\">embed</span><span class=\"token punctuation\">(</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'main'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span>ports<span class=\"token punctuation\">.</span>generationRequest<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ids</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>  \n    app<span class=\"token punctuation\">.</span>ports<span class=\"token punctuation\">.</span>generationResponse<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token function\">createResponse</span><span class=\"token punctuation\">(</span>ids<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">shuffle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">var</span> currentIndex <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> temporaryValue<span class=\"token punctuation\">,</span> randomIndex <span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// While there remain elements to shuffle...</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">!==</span> currentIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token comment\">// Pick a remaining element...</span>\n        randomIndex <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> currentIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        currentIndex <span class=\"token operator\">-=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// And swap it with the current element.</span>\n        temporaryValue <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>currentIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        array<span class=\"token punctuation\">[</span>currentIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>randomIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        array<span class=\"token punctuation\">[</span>randomIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temporaryValue<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> array<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">createResponse</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">persons</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token function\">shuffle</span><span class=\"token punctuation\">(</span>persons<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> duplicates <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">return</span> id <span class=\"token operator\">===</span> persons<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> duplicates <span class=\"token operator\">?</span> <span class=\"token function\">createResponse</span><span class=\"token punctuation\">(</span>persons<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Inside the subscribe function I call the <code class=\"language-text\">generationResponse</code> port in Elm to return the result.<br>\nIn order to capture the result I need a subscription in Elm.</p>\n<div class=\"gatsby-highlight\" data-language=\"elm\"><pre class=\"language-elm\"><code class=\"language-elm\"><span class=\"token hvariable\">port</span> <span class=\"token hvariable\">generationResponse</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">List</span> <span class=\"token constant\">Int</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Sub</span> <span class=\"token hvariable\">msg</span>\n\n<span class=\"token hvariable\">subscriptions</span> <span class=\"token operator\">:</span> <span class=\"token constant\">Model</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Sub</span> <span class=\"token constant\">Msg</span>  \n<span class=\"token hvariable\">subscriptions</span> <span class=\"token hvariable\">model</span> <span class=\"token operator\">=</span>  \n    <span class=\"token hvariable\">generationResponse</span> <span class=\"token constant\">Result</span>\n\n<span class=\"token hvariable\">main</span> <span class=\"token operator\">:</span> <span class=\"token constant\">Program</span> <span class=\"token constant\">Never</span> <span class=\"token constant\">Model</span> <span class=\"token constant\">Msg</span>  \n<span class=\"token hvariable\">main</span> <span class=\"token operator\">=</span>  \n    <span class=\"token hvariable\">program</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token hvariable\">init</span> <span class=\"token operator\">=</span> <span class=\"token hvariable\">init</span>\n        <span class=\"token punctuation\">,</span> <span class=\"token hvariable\">view</span> <span class=\"token operator\">=</span> <span class=\"token hvariable\">view</span>\n        <span class=\"token punctuation\">,</span> <span class=\"token hvariable\">update</span> <span class=\"token operator\">=</span> <span class=\"token hvariable\">update</span>\n        <span class=\"token punctuation\">,</span> <span class=\"token hvariable\">subscriptions</span> <span class=\"token operator\">=</span> <span class=\"token hvariable\">subscriptions</span>\n        <span class=\"token punctuation\">}</span></code></pre></div>\n<p>So the port gets called, the subscription message will find its way into the update function (into <code class=\"language-text\">processResult</code>) and the result can used to populate the dictionary.</p>\n<div class=\"gatsby-highlight\" data-language=\"elm\"><pre class=\"language-elm\"><code class=\"language-elm\"><span class=\"token hvariable\">processResult</span> <span class=\"token operator\">:</span> <span class=\"token constant\">Model</span> <span class=\"token operator\">-></span> <span class=\"token constant\">List</span> <span class=\"token constant\">Int</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span> <span class=\"token constant\">Model</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">Cmd</span> <span class=\"token constant\">Msg</span> <span class=\"token punctuation\">)</span>\n<span class=\"token hvariable\">processResult</span> <span class=\"token hvariable\">model</span> <span class=\"token hvariable\">ids</span> <span class=\"token operator\">=</span>  \n    <span class=\"token keyword\">let</span>\n        <span class=\"token hvariable\">personIds</span> <span class=\"token operator\">=</span>\n            <span class=\"token hvariable\">List.map</span> <span class=\"token punctuation\">(</span>\\<span class=\"token hvariable\">p</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">p</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">id</span><span class=\"token punctuation\">)</span> <span class=\"token hvariable\">model</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">people</span>\n\n        <span class=\"token hvariable\">merged</span> <span class=\"token operator\">=</span>\n            <span class=\"token hvariable\">List.map2</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token hvariable\">personIds</span> <span class=\"token hvariable\">ids</span>\n    <span class=\"token keyword\">in</span>\n        <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> <span class=\"token hvariable\">model</span> <span class=\"token operator\">|</span> <span class=\"token hvariable\">result</span> <span class=\"token operator\">=</span> <span class=\"token hvariable\">Dict.fromList</span> <span class=\"token hvariable\">merged</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">Cmd.none</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h2>The Source</h2>\n<p>Is on my <a href=\"https://github.com/nojaf/christmas-elm\">github</a> or you can view the result on <a href=\"https://nojaf.github.io/christmas-elm/\">https://nojaf.github.io/christmas-elm/</a>.</p>\n<h2>Remarks</h2>\n<ul>\n<li>Comparing to my <a href=\"https://github.com/nojaf/christmas-redux\">React/Redux example</a> I enjoyed Elm a lot more. Mainly because there is so much goodness just out of the box where with JavaScript you need to set it up yourselves. I’m talking about the frameworks here <em>(Redux/ImmutableJS/React/DevTools)</em>, a lot of these solutions are included in the Elm language/architecture.</li>\n<li>I didn’t write any tests and I actually feel ok with this. The Elm compiler is so brilliant that I trust the output once it gets compiled.</li>\n<li>Elm really deserves a lot more attention. Too many developers are hyped with Angular2/TypeScript, Vuejs, React/Flow and others. Nothing wrong with these great frameworks, I merely encourage everyone to try out Elm as it changed the way I look at the JavaScript landscape.</li>\n</ul>\n<h2>Final words</h2>\n<p>I hope you enjoyed this blogpost and it all makes sense. If you have any suggestions or questions please leave a comment.</p>\n<p>Yours truly,<br>\nnojaf</p>","frontmatter":{"title":"Adventures in Elm","date":"2016-11-28","path":"2016/11/28/adventures-in-elm/","tags":["javascript","elm","fp"],"cover":{"publicURL":"/static/8d200ac946657c873696f2a93c8379dd/blog.nojaf.com.adeventures-in-elm.jpg"}}}},"pageContext":{"slug":"/adventures-in-elm/","previous":{"fields":{"slug":"/laradock-windows-10/"},"frontmatter":{"title":"Running Laravel projects on Windows 10 using Docker","path":"2016/08/19/laradock-on-windows-10/","tags":["laravel","docker","php","laradock","how-to"]}},"next":{"fields":{"slug":"/fable-docker/"},"frontmatter":{"title":"Building Fable apps inside a Docker container","path":"2018/01/20/building-fable-apps-inside-a-docker-container/","tags":["fable","docker","fsharp"]}}}},"staticQueryHashes":["3128451518","677231581"],"slicesMap":{}}